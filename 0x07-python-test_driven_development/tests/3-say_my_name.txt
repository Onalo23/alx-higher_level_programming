3-say_my_name.txt module

====================================
the Use of 3-say_my_name.py Function
====================================

modules defines a function ``say_my_name(first_name, last_name="")``

module operation
================

``say_my_name(...)`` prints "My name is <first_name> <last_name>"

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Brennan", "Banabas")
    My name is Brennan Banabas

::

    >>> say_my_name("King Charles", "Jones III")
    My name is King Charles Jones III

arameter ```last_name``` optional. If no last name is provided,
an empty string is printed instead

::

    >>> say_my_name("Charles")
    My name is Charles

the invalid Names
=================

parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError will raised

::

    >>> say_my_name(6, "Jones")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Jimmy", ["Cat", "Lakers", "Cool"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Jimmy": 6, "Jones": 23}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

a minimum of one name must be provided

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
