 0-add_integer.txt module

=================================
the Use 0-add_integer.py Function
=================================

module defines an integer addition function ``add_integer(a, b=98)``

the Use
=======

``add_integer(...)``` returns addition of two args. For numbers
and also equivalent to using the ``+`` operator

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

::

    >>> add_integer(2, -3)
    -1

floating-point values

::

    >>> add_integer(2.0, 3.0)
    5

floats are casted to integers before addition is been performed

::

    >>> add_integer(2.9, 0.2)
    2

::

    >>> add_integer(-2.9, -0.2)
    -2

floating and non-floating point values can be combined

::

    >>> add_integer(2.3, -3)
    -1

second arg optional - 98 by default

::

    >>> add_integer(2)
    100

Non-Numbers
=============

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

    >>> add_integer("hello", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2, "hello")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

args are non-integers and non-floats, TypeError message only
printed for the first argument

::

    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer

function fails if infinity is provided

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
     

::

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

with NaN numbers

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
